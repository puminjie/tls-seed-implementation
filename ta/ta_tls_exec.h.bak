#ifndef __TA_TLS_EXEC_H__
#define __TA_TLS_EXEC_H__

#include <inttypes.h>
#include <tee_internal_api.h>
#include <openssl/ssl.h>
#include <openssl/logs.h>
#include <string.h>

#include "ta_sio.h"

#define MSG_LENGTH 256

static const unsigned char crt_buf[] =
{
0x30, 0x82, 0x02, 0x40, 0x30, 0x82, 0x01, 0xE7, 0xA0, 0x03,
0x02, 0x01, 0x02, 0x02, 0x09, 0x00, 0x82, 0x1E, 0x6D, 0xD3,
0xA9, 0x9B, 0x01, 0x71, 0x30, 0x0A, 0x06, 0x08, 0x2A, 0x86,
0x48, 0xCE, 0x3D, 0x04, 0x03, 0x02, 0x30, 0x81, 0x86, 0x31,
0x0B, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02,
0x4B, 0x52, 0x31, 0x0E, 0x30, 0x0C, 0x06, 0x03, 0x55, 0x04,
0x08, 0x0C, 0x05, 0x53, 0x65, 0x6F, 0x75, 0x6C, 0x31, 0x0E,
0x30, 0x0C, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0C, 0x05, 0x53,
0x65, 0x6F, 0x75, 0x6C, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03,
0x55, 0x04, 0x0A, 0x0C, 0x0A, 0x41, 0x6C, 0x69, 0x63, 0x65,
0x20, 0x49, 0x6E, 0x63, 0x2E, 0x31, 0x0E, 0x30, 0x0C, 0x06,
0x03, 0x55, 0x04, 0x0B, 0x0C, 0x05, 0x41, 0x6C, 0x69, 0x63,
0x65, 0x31, 0x15, 0x30, 0x13, 0x06, 0x03, 0x55, 0x04, 0x03,
0x0C, 0x0C, 0x63, 0x61, 0x2E, 0x61, 0x6C, 0x69, 0x63, 0x65,
0x2E, 0x63, 0x6F, 0x6D, 0x31, 0x1B, 0x30, 0x19, 0x06, 0x09,
0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x09, 0x01, 0x16,
0x0C, 0x63, 0x61, 0x40, 0x61, 0x6C, 0x69, 0x63, 0x65, 0x2E,
0x63, 0x6F, 0x6D, 0x30, 0x1E, 0x17, 0x0D, 0x31, 0x38, 0x31,
0x30, 0x31, 0x31, 0x31, 0x30, 0x32, 0x34, 0x33, 0x33, 0x5A,
0x17, 0x0D, 0x31, 0x39, 0x31, 0x30, 0x31, 0x31, 0x31, 0x30,
0x32, 0x34, 0x33, 0x33, 0x5A, 0x30, 0x81, 0x8C, 0x31, 0x0B,
0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x4B,
0x52, 0x31, 0x0E, 0x30, 0x0C, 0x06, 0x03, 0x55, 0x04, 0x08,
0x0C, 0x05, 0x53, 0x65, 0x6F, 0x75, 0x6C, 0x31, 0x0E, 0x30,
0x0C, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0C, 0x05, 0x53, 0x65,
0x6F, 0x75, 0x6C, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55,
0x04, 0x0A, 0x0C, 0x09, 0x53, 0x4E, 0x55, 0x20, 0x4D, 0x4D,
0x4C, 0x41, 0x42, 0x31, 0x0E, 0x30, 0x0C, 0x06, 0x03, 0x55,
0x04, 0x0B, 0x0C, 0x05, 0x4D, 0x4D, 0x4C, 0x41, 0x42, 0x31,
0x18, 0x30, 0x16, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0C, 0x0F,
0x61, 0x2E, 0x65, 0x64, 0x67, 0x65, 0x63, 0x61, 0x63, 0x68,
0x65, 0x2E, 0x63, 0x6F, 0x6D, 0x31, 0x1F, 0x30, 0x1D, 0x06,
0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x09, 0x01,
0x16, 0x10, 0x65, 0x63, 0x40, 0x65, 0x64, 0x67, 0x65, 0x63,
0x61, 0x63, 0x68, 0x65, 0x2E, 0x63, 0x6F, 0x6D, 0x30, 0x59,
0x30, 0x13, 0x06, 0x07, 0x2A, 0x86, 0x48, 0xCE, 0x3D, 0x02,
0x01, 0x06, 0x08, 0x2A, 0x86, 0x48, 0xCE, 0x3D, 0x03, 0x01,
0x07, 0x03, 0x42, 0x00, 0x04, 0x5E, 0xE7, 0x1F, 0x0D, 0x59,
0x9C, 0x67, 0xC2, 0xBB, 0x3D, 0xC6, 0x77, 0xB8, 0x79, 0x56,
0x7B, 0x8F, 0x59, 0x4B, 0x31, 0x99, 0x57, 0x7C, 0x4E, 0x73,
0xD9, 0x45, 0x9D, 0x66, 0x77, 0xB5, 0x41, 0x2A, 0x19, 0x19,
0xCF, 0x7A, 0x36, 0x4B, 0x0D, 0x19, 0x13, 0x25, 0x67, 0x89,
0x59, 0xAD, 0x49, 0x42, 0xB1, 0xCA, 0x0B, 0x1D, 0x1A, 0x13,
0x1A, 0x8D, 0x64, 0x5F, 0xE8, 0xB0, 0xC6, 0x9C, 0xC0, 0xA3,
0x36, 0x30, 0x34, 0x30, 0x09, 0x06, 0x03, 0x55, 0x1D, 0x13,
0x04, 0x02, 0x30, 0x00, 0x30, 0x0B, 0x06, 0x03, 0x55, 0x1D,
0x0F, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x1A, 0x06,
0x03, 0x55, 0x1D, 0x11, 0x04, 0x13, 0x30, 0x11, 0x82, 0x0F,
0x2A, 0x2E, 0x65, 0x64, 0x67, 0x65, 0x63, 0x61, 0x63, 0x68,
0x65, 0x2E, 0x63, 0x6F, 0x6D, 0x30, 0x0A, 0x06, 0x08, 0x2A,
0x86, 0x48, 0xCE, 0x3D, 0x04, 0x03, 0x02, 0x03, 0x47, 0x00,
0x30, 0x44, 0x02, 0x20, 0x09, 0x3F, 0x64, 0x27, 0xA9, 0xFD,
0x05, 0xC7, 0x7A, 0x0E, 0x50, 0x72, 0xFB, 0xEF, 0x4D, 0xE9,
0xE8, 0xEF, 0x17, 0xAE, 0x1F, 0xF2, 0x9A, 0x68, 0x38, 0xDE,
0x1C, 0xE3, 0xAD, 0x57, 0xB1, 0x74, 0x02, 0x20, 0x36, 0xE0,
0x18, 0xAB, 0x15, 0x68, 0xC4, 0xB3, 0xCA, 0x90, 0x54, 0x92,
0x60, 0xA3, 0xF9, 0x6D, 0x5F, 0x58, 0x3D, 0xC4, 0xEF, 0xEC,
0xD0, 0x10, 0xAE, 0xDF, 0x34, 0x97, 0x27, 0x2F, 0x1D, 0xAE
};

static const unsigned char priv_buf[] =
{
0x30, 0x77, 0x02, 0x01, 0x01, 0x04, 0x20, 0x07, 0x81, 0xAC,
0x86, 0x36, 0x4D, 0x58, 0x92, 0xDB, 0x33, 0x22, 0xFE, 0x42,
0x70, 0xBD, 0xF9, 0xE4, 0x31, 0xE7, 0xBE, 0x5E, 0xC7, 0x51,
0x20, 0x85, 0x1C, 0x28, 0xBD, 0x33, 0x39, 0x0C, 0x15, 0xA0,
0x0A, 0x06, 0x08, 0x2A, 0x86, 0x48, 0xCE, 0x3D, 0x03, 0x01,
0x07, 0xA1, 0x44, 0x03, 0x42, 0x00, 0x04, 0x5E, 0xE7, 0x1F,
0x0D, 0x59, 0x9C, 0x67, 0xC2, 0xBB, 0x3D, 0xC6, 0x77, 0xB8,
0x79, 0x56, 0x7B, 0x8F, 0x59, 0x4B, 0x31, 0x99, 0x57, 0x7C,
0x4E, 0x73, 0xD9, 0x45, 0x9D, 0x66, 0x77, 0xB5, 0x41, 0x2A,
0x19, 0x19, 0xCF, 0x7A, 0x36, 0x4B, 0x0D, 0x19, 0x13, 0x25,
0x67, 0x89, 0x59, 0xAD, 0x49, 0x42, 0xB1, 0xCA, 0x0B, 0x1D,
0x1A, 0x13, 0x1A, 0x8D, 0x64, 0x5F, 0xE8, 0xB0, 0xC6, 0x9C,
0xC0
};

static const unsigned char ca_buf[] =
{
0x30, 0x82, 0x02, 0x9B, 0x30, 0x82, 0x02, 0x42, 0xA0, 0x03,
0x02, 0x01, 0x02, 0x02, 0x09, 0x00, 0x82, 0x1E, 0x6D, 0xD3,
0xA9, 0x9B, 0x01, 0x67, 0x30, 0x0A, 0x06, 0x08, 0x2A, 0x86,
0x48, 0xCE, 0x3D, 0x04, 0x03, 0x02, 0x30, 0x81, 0x86, 0x31,
0x0B, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02,
0x4B, 0x52, 0x31, 0x0E, 0x30, 0x0C, 0x06, 0x03, 0x55, 0x04,
0x08, 0x0C, 0x05, 0x53, 0x65, 0x6F, 0x75, 0x6C, 0x31, 0x0E,
0x30, 0x0C, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0C, 0x05, 0x53,
0x65, 0x6F, 0x75, 0x6C, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03,
0x55, 0x04, 0x0A, 0x0C, 0x0A, 0x41, 0x6C, 0x69, 0x63, 0x65,
0x20, 0x49, 0x6E, 0x63, 0x2E, 0x31, 0x0E, 0x30, 0x0C, 0x06,
0x03, 0x55, 0x04, 0x0B, 0x0C, 0x05, 0x41, 0x6C, 0x69, 0x63,
0x65, 0x31, 0x15, 0x30, 0x13, 0x06, 0x03, 0x55, 0x04, 0x03,
0x0C, 0x0C, 0x63, 0x61, 0x2E, 0x61, 0x6C, 0x69, 0x63, 0x65,
0x2E, 0x63, 0x6F, 0x6D, 0x31, 0x1B, 0x30, 0x19, 0x06, 0x09,
0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x09, 0x01, 0x16,
0x0C, 0x63, 0x61, 0x40, 0x61, 0x6C, 0x69, 0x63, 0x65, 0x2E,
0x63, 0x6F, 0x6D, 0x30, 0x1E, 0x17, 0x0D, 0x31, 0x38, 0x30,
0x37, 0x32, 0x39, 0x31, 0x30, 0x34, 0x38, 0x34, 0x37, 0x5A,
0x17, 0x0D, 0x32, 0x38, 0x30, 0x37, 0x32, 0x36, 0x31, 0x30,
0x34, 0x38, 0x34, 0x37, 0x5A, 0x30, 0x81, 0x86, 0x31, 0x0B,
0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x4B,
0x52, 0x31, 0x0E, 0x30, 0x0C, 0x06, 0x03, 0x55, 0x04, 0x08,
0x0C, 0x05, 0x53, 0x65, 0x6F, 0x75, 0x6C, 0x31, 0x0E, 0x30,
0x0C, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0C, 0x05, 0x53, 0x65,
0x6F, 0x75, 0x6C, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55,
0x04, 0x0A, 0x0C, 0x0A, 0x41, 0x6C, 0x69, 0x63, 0x65, 0x20,
0x49, 0x6E, 0x63, 0x2E, 0x31, 0x0E, 0x30, 0x0C, 0x06, 0x03,
0x55, 0x04, 0x0B, 0x0C, 0x05, 0x41, 0x6C, 0x69, 0x63, 0x65,
0x31, 0x15, 0x30, 0x13, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0C,
0x0C, 0x63, 0x61, 0x2E, 0x61, 0x6C, 0x69, 0x63, 0x65, 0x2E,
0x63, 0x6F, 0x6D, 0x31, 0x1B, 0x30, 0x19, 0x06, 0x09, 0x2A,
0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x09, 0x01, 0x16, 0x0C,
0x63, 0x61, 0x40, 0x61, 0x6C, 0x69, 0x63, 0x65, 0x2E, 0x63,
0x6F, 0x6D, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2A, 0x86,
0x48, 0xCE, 0x3D, 0x02, 0x01, 0x06, 0x08, 0x2A, 0x86, 0x48,
0xCE, 0x3D, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xC9,
0x30, 0xA1, 0xFE, 0x39, 0xC0, 0x88, 0xE8, 0xE5, 0xA0, 0x5E,
0xB5, 0x07, 0x36, 0xA4, 0xCC, 0x53, 0xB5, 0xF0, 0xAC, 0x34,
0x6B, 0x90, 0x90, 0x39, 0xB0, 0xB2, 0x82, 0xA6, 0xB4, 0x9B,
0x0D, 0xB5, 0x08, 0x04, 0xA1, 0x2F, 0x2C, 0x64, 0x69, 0xEA,
0x70, 0x38, 0x60, 0xB1, 0x97, 0xAE, 0x8F, 0xA6, 0xC2, 0x7E,
0xD3, 0x70, 0xDF, 0xCE, 0x17, 0x48, 0x6F, 0xE8, 0x74, 0x01,
0x72, 0x04, 0x8E, 0xA3, 0x81, 0x96, 0x30, 0x81, 0x93, 0x30,
0x1D, 0x06, 0x03, 0x55, 0x1D, 0x0E, 0x04, 0x16, 0x04, 0x14,
0xFC, 0x44, 0x73, 0xD1, 0x0C, 0x0B, 0x88, 0x20, 0x63, 0xF3,
0xD6, 0x94, 0x07, 0xF5, 0x7F, 0xE0, 0x62, 0x59, 0xEF, 0x2E,
0x30, 0x1F, 0x06, 0x03, 0x55, 0x1D, 0x23, 0x04, 0x18, 0x30,
0x16, 0x80, 0x14, 0xFC, 0x44, 0x73, 0xD1, 0x0C, 0x0B, 0x88,
0x20, 0x63, 0xF3, 0xD6, 0x94, 0x07, 0xF5, 0x7F, 0xE0, 0x62,
0x59, 0xEF, 0x2E, 0x30, 0x36, 0x06, 0x08, 0x2B, 0x06, 0x01,
0x05, 0x05, 0x07, 0x01, 0x01, 0x04, 0x2A, 0x30, 0x28, 0x30,
0x26, 0x06, 0x08, 0x2B, 0x06, 0x01, 0x05, 0x05, 0x07, 0x30,
0x01, 0x86, 0x1A, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F,
0x31, 0x34, 0x37, 0x2E, 0x34, 0x36, 0x2E, 0x32, 0x31, 0x35,
0x2E, 0x31, 0x35, 0x32, 0x3A, 0x35, 0x36, 0x37, 0x38, 0x30,
0x0C, 0x06, 0x03, 0x55, 0x1D, 0x13, 0x04, 0x05, 0x30, 0x03,
0x01, 0x01, 0xFF, 0x30, 0x0B, 0x06, 0x03, 0x55, 0x1D, 0x0F,
0x04, 0x04, 0x03, 0x02, 0x01, 0x06, 0x30, 0x0A, 0x06, 0x08,
0x2A, 0x86, 0x48, 0xCE, 0x3D, 0x04, 0x03, 0x02, 0x03, 0x47,
0x00, 0x30, 0x44, 0x02, 0x20, 0x4B, 0xC5, 0xAB, 0x4E, 0x11,
0x49, 0x7C, 0x71, 0x69, 0xCA, 0xE6, 0x28, 0x99, 0x96, 0xF1,
0x8E, 0x51, 0xA9, 0x2A, 0x5D, 0xDA, 0x49, 0x83, 0xAC, 0xBE,
0xCC, 0xB7, 0xAA, 0x40, 0x5A, 0x38, 0x97, 0x02, 0x20, 0x07,
0x60, 0x7C, 0x65, 0xEC, 0x18, 0x5E, 0x01, 0xF1, 0x8F, 0x49,
0xE9, 0x5E, 0xE1, 0x38, 0x41, 0x82, 0xD1, 0xCE, 0x8C, 0xF8,
0x14, 0x44, 0x64, 0x3F, 0x61, 0x63, 0x17, 0x22, 0xFA, 0x46,
0x1C
};

static const unsigned char orig_buf[] =
{
0x30, 0x82, 0x02, 0x37, 0x30, 0x82, 0x01, 0xDE, 0xA0, 0x03,
0x02, 0x01, 0x02, 0x02, 0x09, 0x00, 0x82, 0x1E, 0x6D, 0xD3,
0xA9, 0x9B, 0x01, 0x70, 0x30, 0x0A, 0x06, 0x08, 0x2A, 0x86,
0x48, 0xCE, 0x3D, 0x04, 0x03, 0x02, 0x30, 0x81, 0x86, 0x31,
0x0B, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02,
0x4B, 0x52, 0x31, 0x0E, 0x30, 0x0C, 0x06, 0x03, 0x55, 0x04,
0x08, 0x0C, 0x05, 0x53, 0x65, 0x6F, 0x75, 0x6C, 0x31, 0x0E,
0x30, 0x0C, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0C, 0x05, 0x53,
0x65, 0x6F, 0x75, 0x6C, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03,
0x55, 0x04, 0x0A, 0x0C, 0x0A, 0x41, 0x6C, 0x69, 0x63, 0x65,
0x20, 0x49, 0x6E, 0x63, 0x2E, 0x31, 0x0E, 0x30, 0x0C, 0x06,
0x03, 0x55, 0x04, 0x0B, 0x0C, 0x05, 0x41, 0x6C, 0x69, 0x63,
0x65, 0x31, 0x15, 0x30, 0x13, 0x06, 0x03, 0x55, 0x04, 0x03,
0x0C, 0x0C, 0x63, 0x61, 0x2E, 0x61, 0x6C, 0x69, 0x63, 0x65,
0x2E, 0x63, 0x6F, 0x6D, 0x31, 0x1B, 0x30, 0x19, 0x06, 0x09,
0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x09, 0x01, 0x16,
0x0C, 0x63, 0x61, 0x40, 0x61, 0x6C, 0x69, 0x63, 0x65, 0x2E,
0x63, 0x6F, 0x6D, 0x30, 0x1E, 0x17, 0x0D, 0x31, 0x38, 0x31,
0x30, 0x31, 0x31, 0x31, 0x30, 0x32, 0x32, 0x30, 0x36, 0x5A,
0x17, 0x0D, 0x31, 0x39, 0x31, 0x30, 0x31, 0x31, 0x31, 0x30,
0x32, 0x32, 0x30, 0x36, 0x5A, 0x30, 0x81, 0x86, 0x31, 0x0B,
0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x4B,
0x52, 0x31, 0x0E, 0x30, 0x0C, 0x06, 0x03, 0x55, 0x04, 0x08,
0x0C, 0x05, 0x53, 0x65, 0x6F, 0x75, 0x6C, 0x31, 0x0E, 0x30,
0x0C, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0C, 0x05, 0x53, 0x65,
0x6F, 0x75, 0x6C, 0x31, 0x15, 0x30, 0x13, 0x06, 0x03, 0x55,
0x04, 0x0A, 0x0C, 0x0C, 0x53, 0x4E, 0x55, 0x20, 0x42, 0x6F,
0x62, 0x20, 0x4C, 0x74, 0x64, 0x2E, 0x31, 0x10, 0x30, 0x0E,
0x06, 0x03, 0x55, 0x04, 0x0B, 0x0C, 0x07, 0x53, 0x4E, 0x55,
0x20, 0x42, 0x6F, 0x62, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03,
0x55, 0x04, 0x03, 0x0C, 0x09, 0x2A, 0x2E, 0x62, 0x6F, 0x62,
0x2E, 0x63, 0x6F, 0x6D, 0x31, 0x1A, 0x30, 0x18, 0x06, 0x09,
0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x09, 0x01, 0x16,
0x0B, 0x62, 0x6F, 0x62, 0x40, 0x62, 0x6F, 0x62, 0x2E, 0x63,
0x6F, 0x6D, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2A, 0x86,
0x48, 0xCE, 0x3D, 0x02, 0x01, 0x06, 0x08, 0x2A, 0x86, 0x48,
0xCE, 0x3D, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x45,
0xF7, 0x2A, 0xE1, 0xFF, 0xED, 0x67, 0x65, 0x80, 0x22, 0x30,
0x85, 0x3A, 0xC2, 0x66, 0x6A, 0x83, 0x83, 0x30, 0x4C, 0x1D,
0xFD, 0x47, 0x29, 0xB7, 0xC8, 0x59, 0xCA, 0x52, 0xCC, 0x05,
0x50, 0x3C, 0x8E, 0xC1, 0xA6, 0x1C, 0x9C, 0x7F, 0x00, 0xCB,
0x25, 0xDE, 0xCC, 0xCB, 0x08, 0x38, 0xE6, 0x67, 0xB3, 0x76,
0x05, 0x5D, 0x5C, 0xAD, 0x23, 0xB3, 0x4F, 0x91, 0xC5, 0x5F,
0x24, 0xAA, 0xED, 0xA3, 0x33, 0x30, 0x31, 0x30, 0x09, 0x06,
0x03, 0x55, 0x1D, 0x13, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0B,
0x06, 0x03, 0x55, 0x1D, 0x0F, 0x04, 0x04, 0x03, 0x02, 0x07,
0x80, 0x30, 0x17, 0x06, 0x03, 0x55, 0x1D, 0x11, 0x04, 0x10,
0x30, 0x0E, 0x82, 0x0C, 0x2A, 0x2E, 0x6F, 0x72, 0x69, 0x67,
0x69, 0x6E, 0x2E, 0x63, 0x6F, 0x6D, 0x30, 0x0A, 0x06, 0x08,
0x2A, 0x86, 0x48, 0xCE, 0x3D, 0x04, 0x03, 0x02, 0x03, 0x47,
0x00, 0x30, 0x44, 0x02, 0x20, 0x77, 0x89, 0xAD, 0x0D, 0x7F,
0xBA, 0x08, 0xD2, 0x13, 0x92, 0xFE, 0xA0, 0x4F, 0x78, 0x04,
0x3A, 0x89, 0x35, 0x59, 0x6A, 0x04, 0x77, 0x91, 0xD6, 0x56,
0x23, 0xC7, 0xCD, 0x8C, 0x47, 0x58, 0xF2, 0x02, 0x20, 0x2F,
0x88, 0x86, 0x05, 0xAF, 0x7B, 0x63, 0x2A, 0xA1, 0x0F, 0xB3,
0xF7, 0xB8, 0xD0, 0x1C, 0xA9, 0x34, 0x44, 0xF4, 0x55, 0x23,
0x01, 0x71, 0xCC, 0xA4, 0x6D, 0xE5, 0x57, 0xB6, 0x88, 0x55,
0xC9
};

static const unsigned char dh_buf[] = 
{
0x20, 0x20, 0x20, 0x20, 0x50, 0x4B, 0x43, 0x53, 0x23, 0x33,
0x20, 0x44, 0x48, 0x20, 0x50, 0x61, 0x72, 0x61, 0x6D, 0x65,
0x74, 0x65, 0x72, 0x73, 0x3A, 0x20, 0x28, 0x31, 0x30, 0x32,
0x34, 0x20, 0x62, 0x69, 0x74, 0x29, 0x0A, 0x20, 0x20, 0x20,
0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x72, 0x69, 0x6D, 0x65,
0x3A, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
0x20, 0x20, 0x20, 0x20, 0x30, 0x30, 0x3A, 0x38, 0x63, 0x3A,
0x32, 0x36, 0x3A, 0x32, 0x39, 0x3A, 0x35, 0x39, 0x3A, 0x63,
0x30, 0x3A, 0x39, 0x36, 0x3A, 0x31, 0x31, 0x3A, 0x39, 0x32,
0x3A, 0x37, 0x33, 0x3A, 0x62, 0x37, 0x3A, 0x37, 0x61, 0x3A,
0x39, 0x34, 0x3A, 0x65, 0x30, 0x3A, 0x34, 0x64, 0x3A, 0x0A,
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
0x20, 0x20, 0x66, 0x37, 0x3A, 0x34, 0x34, 0x3A, 0x61, 0x31,
0x3A, 0x39, 0x33, 0x3A, 0x39, 0x31, 0x3A, 0x32, 0x30, 0x3A,
0x31, 0x65, 0x3A, 0x39, 0x33, 0x3A, 0x37, 0x36, 0x3A, 0x37,
0x66, 0x3A, 0x30, 0x35, 0x3A, 0x38, 0x39, 0x3A, 0x64, 0x35,
0x3A, 0x64, 0x30, 0x3A, 0x34, 0x35, 0x3A, 0x0A, 0x20, 0x20,
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
0x62, 0x64, 0x3A, 0x36, 0x39, 0x3A, 0x62, 0x64, 0x3A, 0x66,
0x61, 0x3A, 0x66, 0x37, 0x3A, 0x39, 0x30, 0x3A, 0x34, 0x61,
0x3A, 0x31, 0x32, 0x3A, 0x61, 0x64, 0x3A, 0x30, 0x36, 0x3A,
0x64, 0x31, 0x3A, 0x38, 0x39, 0x3A, 0x38, 0x30, 0x3A, 0x64,
0x64, 0x3A, 0x38, 0x34, 0x3A, 0x0A, 0x20, 0x20, 0x20, 0x20,
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x32,
0x3A, 0x35, 0x63, 0x3A, 0x35, 0x62, 0x3A, 0x37, 0x34, 0x3A,
0x62, 0x30, 0x3A, 0x36, 0x61, 0x3A, 0x61, 0x30, 0x3A, 0x65,
0x36, 0x3A, 0x38, 0x33, 0x3A, 0x34, 0x36, 0x3A, 0x62, 0x34,
0x3A, 0x32, 0x37, 0x3A, 0x30, 0x64, 0x3A, 0x61, 0x34, 0x3A,
0x64, 0x62, 0x3A, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x37, 0x34, 0x3A, 0x61,
0x63, 0x3A, 0x61, 0x34, 0x3A, 0x64, 0x35, 0x3A, 0x35, 0x38,
0x3A, 0x36, 0x63, 0x3A, 0x37, 0x62, 0x3A, 0x31, 0x32, 0x3A,
0x34, 0x33, 0x3A, 0x32, 0x34, 0x3A, 0x37, 0x64, 0x3A, 0x32,
0x62, 0x3A, 0x37, 0x31, 0x3A, 0x39, 0x32, 0x3A, 0x62, 0x65,
0x3A, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
0x20, 0x20, 0x20, 0x20, 0x38, 0x34, 0x3A, 0x62, 0x66, 0x3A,
0x39, 0x61, 0x3A, 0x31, 0x32, 0x3A, 0x32, 0x30, 0x3A, 0x30,
0x34, 0x3A, 0x30, 0x38, 0x3A, 0x35, 0x35, 0x3A, 0x62, 0x33,
0x3A, 0x62, 0x66, 0x3A, 0x64, 0x39, 0x3A, 0x31, 0x66, 0x3A,
0x62, 0x62, 0x3A, 0x32, 0x36, 0x3A, 0x63, 0x64, 0x3A, 0x0A,
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
0x20, 0x20, 0x62, 0x61, 0x3A, 0x30, 0x32, 0x3A, 0x64, 0x34,
0x3A, 0x39, 0x62, 0x3A, 0x32, 0x38, 0x3A, 0x30, 0x66, 0x3A,
0x32, 0x34, 0x3A, 0x64, 0x38, 0x3A, 0x30, 0x36, 0x3A, 0x31,
0x30, 0x3A, 0x64, 0x30, 0x3A, 0x35, 0x30, 0x3A, 0x39, 0x64,
0x3A, 0x62, 0x36, 0x3A, 0x35, 0x61, 0x3A, 0x0A, 0x20, 0x20,
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
0x39, 0x37, 0x3A, 0x66, 0x61, 0x3A, 0x64, 0x38, 0x3A, 0x36,
0x30, 0x3A, 0x63, 0x34, 0x3A, 0x39, 0x61, 0x3A, 0x64, 0x34,
0x3A, 0x38, 0x38, 0x3A, 0x39, 0x37, 0x3A, 0x61, 0x35, 0x3A,
0x64, 0x62, 0x3A, 0x66, 0x36, 0x3A, 0x35, 0x32, 0x3A, 0x61,
0x33, 0x3A, 0x36, 0x36, 0x3A, 0x0A, 0x20, 0x20, 0x20, 0x20,
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x31, 0x63,
0x3A, 0x33, 0x63, 0x3A, 0x31, 0x63, 0x3A, 0x36, 0x36, 0x3A,
0x31, 0x33, 0x3A, 0x64, 0x31, 0x3A, 0x35, 0x35, 0x3A, 0x37,
0x62, 0x3A, 0x36, 0x33, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20,
0x20, 0x20, 0x20, 0x67, 0x65, 0x6E, 0x65, 0x72, 0x61, 0x74,
0x6F, 0x72, 0x3A, 0x20, 0x35, 0x20, 0x28, 0x30, 0x78, 0x35,
0x29, 0x0A, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x42, 0x45, 0x47,
0x49, 0x4E, 0x20, 0x44, 0x48, 0x20, 0x50, 0x41, 0x52, 0x41,
0x4D, 0x45, 0x54, 0x45, 0x52, 0x53, 0x2D, 0x2D, 0x2D, 0x2D,
0x2D, 0x0A, 0x4D, 0x49, 0x47, 0x48, 0x41, 0x6F, 0x47, 0x42,
0x41, 0x49, 0x77, 0x6D, 0x4B, 0x56, 0x6E, 0x41, 0x6C, 0x68,
0x47, 0x53, 0x63, 0x37, 0x64, 0x36, 0x6C, 0x4F, 0x42, 0x4E,
0x39, 0x30, 0x53, 0x68, 0x6B, 0x35, 0x45, 0x67, 0x48, 0x70,
0x4E, 0x32, 0x66, 0x77, 0x57, 0x4A, 0x31, 0x64, 0x42, 0x46,
0x76, 0x57, 0x6D, 0x39, 0x2B, 0x76, 0x65, 0x51, 0x53, 0x68,
0x4B, 0x74, 0x42, 0x74, 0x47, 0x4A, 0x0A, 0x67, 0x4E, 0x32,
0x45, 0x34, 0x6C, 0x78, 0x62, 0x64, 0x4C, 0x42, 0x71, 0x6F,
0x4F, 0x61, 0x44, 0x52, 0x72, 0x51, 0x6E, 0x44, 0x61, 0x54,
0x62, 0x64, 0x4B, 0x79, 0x6B, 0x31, 0x56, 0x68, 0x73, 0x65,
0x78, 0x4A, 0x44, 0x4A, 0x48, 0x30, 0x72, 0x63, 0x5A, 0x4B,
0x2B, 0x68, 0x4C, 0x2B, 0x61, 0x45, 0x69, 0x41, 0x45, 0x43,
0x46, 0x57, 0x7A, 0x76, 0x39, 0x6B, 0x66, 0x75, 0x79, 0x62,
0x4E, 0x0A, 0x75, 0x67, 0x4C, 0x55, 0x6D, 0x79, 0x67, 0x50,
0x4A, 0x4E, 0x67, 0x47, 0x45, 0x4E, 0x42, 0x51, 0x6E, 0x62,
0x5A, 0x61, 0x6C, 0x2F, 0x72, 0x59, 0x59, 0x4D, 0x53, 0x61,
0x31, 0x49, 0x69, 0x58, 0x70, 0x64, 0x76, 0x32, 0x55, 0x71,
0x4E, 0x6D, 0x48, 0x44, 0x77, 0x63, 0x5A, 0x68, 0x50, 0x52,
0x56, 0x58, 0x74, 0x6A, 0x41, 0x67, 0x45, 0x46, 0x0A, 0x2D,
0x2D, 0x2D, 0x2D, 0x2D, 0x45, 0x4E, 0x44, 0x20, 0x44, 0x48,
0x20, 0x50, 0x41, 0x52, 0x41, 0x4D, 0x45, 0x54, 0x45, 0x52,
0x53, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x0A
};

static const unsigned char cc_buf[] =
{
0x00, 0x77, 0x00, 0x2A, 0x5B, 0xBF, 0x35, 0x8B, 0x5C, 0x57,
0xCC, 0x0B, 0x02, 0xA0, 0xAC, 0x6E, 0xD7, 0xC3, 0x71, 0x3E,
0x41, 0x9E, 0x31, 0xD6, 0x85, 0xEB, 0x9D, 0x1E, 0xC0, 0xE2,
0x75, 0xE4, 0xD8, 0xC4, 0x17, 0xBB, 0xDB, 0x93, 0xED, 0x37,
0xC5, 0xB1, 0x81, 0x19, 0x06, 0xB1, 0x02, 0xA0, 0x00, 0x47,
0x30, 0x45, 0x02, 0x21, 0x00, 0xF4, 0x20, 0xC8, 0xA1, 0x06,
0xCF, 0x7A, 0xA1, 0x79, 0xE1, 0x37, 0xFA, 0xC6, 0x0B, 0xBD,
0xD5, 0xE3, 0xDE, 0x3A, 0x04, 0xB4, 0x9D, 0x18, 0x7C, 0xAF,
0x60, 0x23, 0x7C, 0x5B, 0x16, 0xE7, 0x5F, 0x02, 0x20, 0x1F,
0x77, 0xC9, 0xF0, 0x8C, 0x7E, 0xDF, 0xEC, 0x89, 0xFF, 0xBF,
0x3D, 0x43, 0x7D, 0x88, 0x04, 0xC9, 0x20, 0xBA, 0xC9, 0xAA,
0xD3, 0x1D, 0x4F, 0x5F, 0x84, 0x00, 0x9B, 0xDE, 0xFB, 0xF6,
0x37, 0x02, 0xA0, 0x00, 0x47, 0x30, 0x45, 0x02, 0x21, 0x00,
0xE2, 0x58, 0x18, 0x30, 0x13, 0xAA, 0xFE, 0x7D, 0x72, 0x27,
0x2D, 0xE0, 0x2F, 0x38, 0xE8, 0x29, 0x91, 0x89, 0xD7, 0x1B,
0x96, 0x8D, 0x3E, 0x4D, 0xE3, 0x4C, 0x5E, 0xB7, 0x5C, 0x4C,
0x5C, 0x34, 0x02, 0x20, 0x3F, 0xB2, 0x72, 0xDE, 0xB4, 0x64,
0x2B, 0xC9, 0x2C, 0xEC, 0x1C, 0xC0, 0x73, 0x6B, 0xED, 0x4E,
0xD3, 0x22, 0xC5, 0x65, 0xAB, 0xC4, 0x21, 0x20, 0x54, 0x04,
0xFD, 0x6D, 0x09, 0x85, 0x4F, 0x40, 0x94
};

SSL_CTX *init_server_ctx(void);
SSL_CTX *init_client_ctx(void);
void free_ctx(SSL_CTX *ctx);
SSL *init_tls_context(SSL_CTX *ctx, log_t *time_log);
void free_tls_context(SSL *ssl);
//SSL *init_tls_context(SSL_CTX *ctx, struct bctx_st *rctx, struct bctx_st *wctx);
TEE_Result tls_execution(SSL *ssl, struct cmd_st *cctx);

#endif /* __TA_TLS_EXEC_H__ */
